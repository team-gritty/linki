<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linki.admin_integration_service.domain.user.repository.myBatis.InfluencerUserMapper">


    <select id="getAllInfluencerUsers" resultType="com.linki.admin_integration_service.domain.user.dto.InfluencerUserDTO">
        SELECT
            influencer.influencer_id AS userId,
            user.user_name AS name,
            user.user_email AS email,
            user.user_phone AS phone,
            channel.channel_name AS snsChannelName,
            channel.channel_url AS snsLink
        FROM user
                 JOIN influencer
                      ON user.user_id = influencer.user_id
                 JOIN channel
                      ON channel.influencer_id = influencer.influencer_id
        ORDER BY influencer.influencer_id DESC
        LIMIT 30000
    </select>

    <select id="searchInfluencerUser"  resultType="com.linki.admin_integration_service.domain.user.dto.InfluencerUserDTO">
        SELECT
        influencer.influencer_id AS userId,
        user.user_name AS name,
        user.user_email AS email,
        user.user_phone AS phone,
        channel.channel_name AS snsChannelName,
        channel.channel_url AS snsLink
        FROM user
        JOIN influencer
        ON user.user_id = influencer.user_id
        JOIN channel
        ON channel.influencer_id = influencer.influencer_id

        WHERE 1 = 1

        <choose>
            <when test="searchType != null and searchType.toLowerCase() eq 'userid'">
                AND TRIM(LOWER(influencer.influencer_id)) = REPLACE(TRIM(#{keyword}), '-', '')
            </when>
            <when test="searchType != null and searchType.toLowerCase() eq 'name'">
                AND TRIM(LOWER(user.user_name)) = TRIM(LOWER(#{keyword}))
            </when>
            <when test="searchType != null and searchType.toLowerCase() eq 'email'">
                AND REPLACE(TRIM(user.user_email), '-', '') = REPLACE(TRIM(#{keyword}), '-', '')
            </when>
            <when test="searchType != null and searchType.toLowerCase() eq 'phone'">
                AND REPLACE(TRIM(user.user_phone), '-', '') = REPLACE(TRIM(#{keyword}), '-', '')
            </when>
            <when test="searchType != null and searchType.toLowerCase() eq 'snschannelname'">
                AND REPLACE(TRIM(channel.channel_name), '-', '') = REPLACE(TRIM(#{keyword}), '-', '')
            </when>
            <when test="searchType != null and searchType.toLowerCase() eq 'snslink'">
                AND TRIM(channel.channel_url) = TRIM(#{keyword})
            </when>
            <otherwise>
                -- 기본 검색 없음
            </otherwise>

        </choose>

    </select>

    <!-- ================================= -->
    <!-- Keyset 페이지네이션 쿼리들 -->
    <!-- ================================= -->

    <select id="getAllInfluencerUsersWithKeyset" resultType="com.linki.admin_integration_service.domain.user.dto.InfluencerUserDTO">
        SELECT
            i.influencer_id AS userId,
            u.user_name AS name,
            u.user_email AS email,
            u.user_phone AS phone,
            '' AS snsChannelName,
            '' AS snsLink,
            u.user_id AS userCursor
        FROM user u
        INNER JOIN influencer i ON u.user_id = i.user_id
        WHERE u.user_role = 'ROLE_INFLUENCER'
        <if test="cursor != null and cursor != ''">
            AND u.user_id > #{cursor}
        </if>
        ORDER BY u.user_id ASC
        LIMIT #{size}
    </select>

    <!-- Keyset 검색 조회 -->
    <select id="searchInfluencerUserWithKeyset" resultType="com.linki.admin_integration_service.domain.user.dto.InfluencerUserDTO">
        SELECT
            i.influencer_id AS userId,
            u.user_name AS name,
            u.user_email AS email,
            u.user_phone AS phone,
            c.channel_name AS snsChannelName,
            c.channel_url AS snsLink,
            u.user_id AS userCursor
        FROM user u
        INNER JOIN influencer i ON u.user_id = i.user_id
        LEFT JOIN channel c ON i.influencer_id = c.influencer_id
        WHERE u.user_role = 'ROLE_INFLUENCER'
        <choose>
            <when test="searchDTO.searchType.toLowerCase() eq 'name'">
                AND TRIM(LOWER(u.user_name)) = TRIM(LOWER(#{searchDTO.keyword}))
            </when>
            <when test="searchDTO.searchType.toLowerCase() eq 'email'">
                AND TRIM(LOWER(u.user_email)) = TRIM(LOWER(#{searchDTO.keyword}))
            </when>
            <when test="searchDTO.searchType.toLowerCase() eq 'phone'">
                AND REPLACE(TRIM(u.user_phone), '-', '') = REPLACE(TRIM(#{searchDTO.keyword}), '-', '')
            </when>
            <otherwise>
                -- 기본 검색 없음
            </otherwise>
        </choose>
        <if test="cursor != null and cursor != ''">
            AND u.user_id > #{cursor}
        </if>
        ORDER BY u.user_id ASC
        LIMIT #{size}
    </select>

    <!-- 채널 정보 별도 조회 (빠른 조회) -->
    <select id="getChannelsByInfluencerIds" resultMap="channelResultMap">
        SELECT 
            i.influencer_id,
            c.channel_name,
            c.channel_url
        FROM influencer i
        LEFT JOIN channel c ON i.influencer_id = c.influencer_id
        WHERE i.influencer_id IN
        <foreach collection="influencerIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- ResultMap 정의 -->
    <resultMap id="channelResultMap" type="map">
        <result property="influencerId" column="influencer_id"/>
        <result property="channelName" column="channel_name"/>
        <result property="channelUrl" column="channel_url"/>
    </resultMap>

</mapper>