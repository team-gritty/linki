import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.Gritty'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {

	springCloudVersion = '2024.0.1'

	set('springAiVersion', "1.0.0-RC1")
}

dependencies {
	// --- Spring Boot Starters (Core Functionalities) ---
	implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 MVC, REST API
	implementation 'org.springframework.boot:spring-boot-starter-security' // 인증 및 보안 - permitAll() 설정으로 누구나 접근 가능
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation (@Valid 등)


	// --- Data Access (ORM & Mapper) ---
	implementation("com.mysql:mysql-connector-j:8.1.0") // MySQL 드라이버

	// --- 개발 편의성 ---
	compileOnly 'org.projectlombok:lombok' // Getter/Setter 등 보일러플레이트 제거
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 자동 재시작 및 개발 도구

	// --- 테스트 ---
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
//	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// --- OK HTTP(http 통신)---
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'

	// --- AI 관련 (실제 사용 시 주석 해제) ---
	implementation("org.springframework.ai:spring-ai-client-chat:1.0.0")

	// --- MSA 관련 eurekaClient ---
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	// health check - SpringBootActuator
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation 'org.springframework.cloud:spring-cloud-starter-config'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"

		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"

	}
}

tasks.named('test') {
	useJUnitPlatform()
}
